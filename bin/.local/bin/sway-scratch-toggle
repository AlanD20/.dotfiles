#!/bin/sh

#
# Usage:
#
# This opens given application then moves it to scratchpad for sway.
# if the application isn't open, first it opens it, then moves it to scratchpad
# this will toggle hide/show the application to scratchpad.
#
# Example:
#
# sway-scratch-toggle <app_name> "<class|app_id>,<identifier>" <sway-commands...>
#
# sway-scratch-toggle spotify "class,Spotify" "resize set 1280 920"
# sway-scratch-toggle alacritty "app_id,alacritty" "resize set 1080 768"
#

swayCommands=$1
shift

appType=$(echo "$1" | cut -d ',' -f 1)
appId=$(echo "$1" | cut -d ',' -f 2)
shift

app=$1

script=$(basename "$0")

if [ -z "$app" ] || [ -z "$appType" ] || [ -z "$appId" ]; then
  printf "app name and identifier are required!\n
  Supported applications will be spawned with given identifier.\n
  - Sway commands are optional
  Examples:\n
  \t %s 'Sway commands' '<class|app_id>,<identifier>' app_name\n\n
  \t %s 'resize set 1280 920' 'class,Spotify' spotify\n
  \t %s 'resize set 1080 768' 'app_id,alacritty' alacritty\n
  " "$script" "$script" "$script"
  exit 1
fi

isAppOpen=$(
  swaymsg -t get_tree | grep -i "\"$appType\": \"$appId\""
  echo $?
)

# Check if grep's exit code is 0, then it found a match,
# any code except 0 exit codes, that means the app isn't open
if [ "$isAppOpen" -ne 0 ]; then

  ("$HOME/.local/bin/run-with-sway-command" "scratchpad show" "$app" --class "$appId" ||
    "$HOME/.local/bin/run-with-sway-command" "scratchpad show" "$app") &
  sleep 1 && {
    swaymsg "[$appType=\"$appId\"] floating enable"
    swaymsg "[$appType=\"$appId\"] $swayCommands"
  }

else
  # toggle scratch
  swaymsg "[$appType=\"$appId\"] scratchpad show"
fi
